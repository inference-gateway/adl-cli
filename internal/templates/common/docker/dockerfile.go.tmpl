FROM golang:1.25-alpine AS builder

# Build arguments for version injection
ARG VERSION="{{ .ADL.Metadata.Version }}"
ARG AGENT_NAME="{{ .ADL.Metadata.Name }}"
ARG AGENT_DESCRIPTION="{{ .ADL.Metadata.Description }}"

WORKDIR /app

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application with optimized LDD flags and version injection
RUN CGO_ENABLED=0 GOOS=linux go build \
    -a \
    -installsuffix cgo \
    -ldflags="-s -w -extldflags '-static' \
        -X 'main.Version=${VERSION}' \
        -X 'main.AgentName=${AGENT_NAME}' \
        -X 'main.AgentDescription=${AGENT_DESCRIPTION}'" \
    -trimpath \
    -o main .

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates tzdata

# Create a2a group and agent user
RUN addgroup -g 1001 a2a && \
    adduser -D -u 1001 -G a2a agent

WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/main .

# Copy agent card
COPY --from=builder /app/.well-known ./.well-known

# Change ownership to agent user
RUN chown -R agent:a2a /app

# Switch to non-root user
USER agent

# Expose port
EXPOSE {{ .ADL.Spec.Server.Port | default 8080 }}

# Set environment variables
ENV A2A_SERVER_PORT={{ .ADL.Spec.Server.Port | default 8080 }}

# Run the application
CMD ["./main"]
