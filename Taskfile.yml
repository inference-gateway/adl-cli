version: '3'

vars:
  APP_NAME: adl
  VERSION: 0.11.0
  BUILD_DIR: bin
  DIST_DIR: dist

tasks:
  build:
    desc: Build the adl CLI
    cmds:
      - mkdir -p {{.BUILD_DIR}}
      - go build -ldflags "-X main.Version={{.VERSION}}" -o {{.BUILD_DIR}}/{{.APP_NAME}} .

  install:
    desc: Install the adl CLI to GOPATH/bin
    cmds:
      - go install -ldflags "-X main.Version={{.VERSION}}" .

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  test:coverage:
    desc: Run tests with coverage
    cmds:
      - go test -v -cover ./...

  fmt:
    desc: Format and vet code
    cmd: |
      go fmt ./...

  vet:
    desc: Run go vet
    cmd: |
      go vet ./...

  lint:
    desc: Run linter
    cmds:
      - golangci-lint run

  mod:
    desc: Download dependencies
    cmds:
      - go mod download
      - go mod tidy

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf {{.BUILD_DIR}}
      - rm -rf {{.DIST_DIR}}

  dev:
    desc: Run in development mode
    deps:
      - build
    cmds:
      - ./{{.BUILD_DIR}}/{{.APP_NAME}} {{.CLI_ARGS}}

  examples:test:
    desc: Test all example ADL files
    deps:
      - build
    cmds:
      - ./{{.BUILD_DIR}}/{{.APP_NAME}} validate examples/go-agent.yaml

  examples:generate:
    desc: Generate all example projects
    deps:
      - build
    cmds:
      - rm -rf test-output
      - mkdir -p test-output
      - ./{{.BUILD_DIR}}/{{.APP_NAME}} generate --file examples/go-agent.yaml --output test-output/go-agent --overwrite --ci

  release:
    desc: Build release binaries for multiple platforms
    cmds:
     - GORELEASER_CURRENT_TAG=v{{.VERSION}} goreleaser release --snapshot --clean --skip=publish

  docker:build:
    desc: Build Docker image
    cmds:
      - docker build -t {{.APP_NAME}}:{{.VERSION}} .

  ci:
    desc: Run CI pipeline (fmt, lint, test, build)
    cmds:
      - task: fmt
      - task: lint
      - task: test
      - task: build
